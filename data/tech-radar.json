[
  {
    "name": "Apache Kafka",
    "ring": "High",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "Apache Kafka ist ein verteiltes Streaming-System mit Open-Source-Lizenz, das für Stream-Verarbeitung, Echtzeit-Daten-Pipelines und Datenintegration im hohen Maßstab verwendet wird. Kafka wurde 2011 bei LinkedIn für den Umgang mit Echtzeit-Daten-Feeds entwickelt. Seitdem hat es sich schnell von einer Messaging-Queue zur vollwertigen Event-Streaming-Plattform entwickelt, die mehr als eine Million Nachrichten pro Sekunde bzw. Billionen von Nachrichten pro Tag verarbeiten kann."
  },
  {
    "name": "AWS",
    "ring": "High",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "Amazon Web Services, auch als AWS bekannt, ist eine vom gleichnamigen Unternehmen angebotene Plattform für Cloud-Computing."
  },
  {
    "name": "Azure",
    "ring": "High",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "Die Azure-Cloudplattform besteht aus mehr als 200 Produkten und Clouddiensten und wurde dafür konzipiert, Sie bei der Entwicklung neuer Lösungen zu unterstützen. So können Sie aktuelle Herausforderungen bewältigen und den Weg für die Zukunft ebnen. Sie können Anwendungen in mehreren Clouds, lokal oder am Edge entwickeln, ausführen und verwalten."
  },
  {
    "name": "Docker",
    "ring": "High",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "Docker ist eine Open-Source-Plattform, die Entwicklern die Erstellung, Bereitstellung, Ausführung, Aktualisierung und Verwaltung von Containern ermöglicht. Container sind standardisierte ausführbare Komponenten, die den Anwendungsquellcode mit den Betriebssystembibliotheken und den Abhängigkeiten kombinieren, die zur Ausführung des Codes in jeder beliebigen Umgebung erforderlich sind."
  },
  {
    "name": "GitHub Actions",
    "ring": "High",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "GitHub Actions ist eine Plattform für Continuous Integration und Continuous Delivery (CI/CD), mit der du deine Build-, Test- und Bereitstellungspipeline automatisieren kannst. Man kann Workflows erstellen, mit denen man alle Pull Requests für das Repository erstellen und testen sowie gemergte Pull Requests für die Produktion bereitstellen kann."
  },
  {
    "name": "Gitlab CI/CD",
    "ring": "High",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "GitLab bietet einem die Möglichkeit, mit Continuous Integration/Continuous Delivery Automatisierung in seine Abläufe zu integrieren. Die CI/CD Pipelines können direkt im Projekt konfiguriert und ausgeführt werden. Somit sind alle wichtigen Daten an einem Ort. Mit der Pipeline können Tests und Deployments automatisch ausgeführt werden."
  },
  {
    "name": "Redis",
    "ring": "High",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "Redis ist ein schneller, Open-Source-In-Memory-Schlüsselwert-Datenstrukturspeicher. Redis bietet eine Reihe von vielseitigen In-Memory-Datenstrukturen, die es Ihnen ermöglichen, verschiedene benutzerdefinierte Anwendungen problemlos zu erstellen. Häufige Anwendungsfälle für Redis sind u. a. Caching, Sitzungsverwaltung, Pub/Sub und Bestenlisten. Redis ist heute der beliebteste Schlüsselwertspeicher. Er ist BSD-lizenziert, wurde im optimierten C-Code geschrieben und unterstützt mehrere Entwicklungssprachen. Redis ist ein Akronym für REmote DIctionary Server. Aufgrund der Geschwindigkeit und Benutzerfreundlichkeit ist Redis eine beliebte Wahl für Web-, Mobil-, Spiele-, Ad-Tech- und IoT -Anwendungen, die eine bestmögliche Leistung erfordern."
  },
  {
    "name": "WIZ",
    "ring": "Dev",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "description": "WIZ ist ein weiterer Anwärter in der reifenden Cloud-Sicherheitsplattform-Landschaft, der seinen Benutzern ermöglicht, Sicherheitsrisiken und -bedrohungen in einer Plattform zu verhindern, zu erkennen und darauf zu reagieren. Wiz kann Fehlkonfigurationen, Schwachstellen und durchgesickerte Geheimnisse sowohl in Artefakten, die noch nicht in Live-Umgebungen bereitgestellt wurden (Containerbilder, Infrastrukturcode), als auch in Live-Workloads (Container, VMs und Cloud-Dienste) erkennen und darauf hinweisen. Es kontextualisiert auch Erkenntnisse auf die spezifische Cloud-Landschaft des Kunden, um Reaktionsteams ein besseres Verständnis des Problems zu ermöglichen und Abhilfemaßnahmen zu priorisieren."
  },
  {
    "name": "Prisma",
    "ring": "Dev",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Prisma ist ein Open-Source-basiertes Datenbank-Toolkit. Es besteht aus drei Haupttools: \nPrisma Client: Ein automatisch generierter und typensicherer Query Builder für Node.js und TypeScript. \nPrisma Migrate: Ein deklaratives Modellierungs- und Migrationssystem für Daten.\n Prisma Studio: Eine GUI zum Anzeigen und Bearbeiten von Daten in Ihrer Datenbank."
  },
  {
    "name": "Dynatrace",
    "ring": "Low",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Dynatrace überwacht die gesamte Infrastruktur, unabhängig von Standort und Technologie. Sowohl Server, Netzwerk, Virtualisierungen als auch Microservices und Container werden automatisch überwacht. Dabei spielt es keine Rolle, ob sich diese in einer Private-, Public- oder Hybrid-Cloud-Lösung befinden."
  },
  {
    "name": "Terraform",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Terraform ist ein quelloffenes „Infrastructure as Code“-Tool, das von HashiCorp entwickelt wurde. Terraform ist ein deklaratives Codierungstool, das es Entwicklern ermöglicht, mithilfe einer übergeordneten Konfigurationssprache namens HCL (HashiCorp Configuration Language) den gewünschten „Endzustand“ einer Cloud- oder lokalen Infrastruktur für die Ausführung einer Anwendung zu beschreiben. Es generiert dann einen Plan für das Erreichen dieses Endstatus und führt den Plan zur Bereitstellung der Infrastruktur aus."
  },
  {
    "name": "Terragrunt",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Terragrunt ist ein Open-Source-Tool, das auf HashiCorp Terraform aufbaut und dazu dient, die Verwaltung von Terraform-Konfigurationen zu vereinfachen und zu verbessern. Terraform ist ein populäres Tool für das Infrastruktur-As-Code (IaC), das es ermöglicht, die Infrastrukturressourcen in verschiedenen Cloud-Plattformen und On-Premises-Infrastrukturen zu definieren, zu verwalten und zu versionieren."
  },
  {
    "name": "Terratest",
    "ring": "Dev",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Terratest ist eine Golang-Bibliothek, die das Schreiben automatisierter Tests für Infrastrukturcode erleichtert. Ein Testlauf erstellt echte Infrastrukturkomponenten (wie Server, Firewalls oder Load Balancer), setzt Anwendungen auf ihnen ein und validiert das erwartete Verhalten mit Terratest. Am Ende des Tests kann Terratest die Apps undeployen und Ressourcen aufräumen. Dies macht es weitgehend nützlich für End-to-End-Tests Ihrer Infrastruktur in einer realen Umgebung."
  },
  {
    "name": "GitHub",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "GitHub ist ein Onlinedienst zur Softwareentwicklung und Versionsverwaltung für Softwareprojekte auf Git-Basis."
  },
  {
    "name": "Gitlab",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "GitLab ist eine On-Premise-Git-Repository-Hosting-Plattform, die proprietären Softwareentwicklungsteams den vertrauten und allgegenwärtigen Workflow bietet, den gehostete Versionskontrolldienste wie GitHub und BitBucket OSS-Entwicklern zur Verfügung stellen. Obwohl es als kostenlose Community-Edition-Software verfügbar ist, bietet die kommerzielle Enterprise-Option Unterstützung und tiefe Integration mit LDAP-Servern."
  },
  {
    "name": "Grafana",
    "ring": "Dev",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Grafana ist eine Open-Source-Software, mit der sich plattformübergreifend Metriken und Daten aus Anwendungen analysieren lassen. "
  },
  {
    "name": "Maven",
    "ring": "Dev",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Maven ist ein Build-Tool der Apache Software Foundation für die Projektverwaltung. Entwickler können damit Java-Projekte automatisieren. Maven ist ein Teil der Apache Software Foundation und wird von dieser gehostet. Das Tool ist aus einem Teil des Jakarta-Projekts hervorgegangen."
  },
  {
    "name": "Git",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Git ist eine freie Software zur verteilten Versionsverwaltung von Dateien, die durch Linus Torvalds initiiert wurde."
  },
  {
    "name": "Sonatype Nexus Repository",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Zentrale Lösung zur Ablage von Komponenten (z.B. Binaries, Pakete und Build-Artefakte). Nexus Repository deckt Funktionen wie z.B. Hochverfügbarkeit, Replikation und Staging von Komponenten ab."
  },
  {
    "name": "SonarQube",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "SonarQube ist eine Open-Source-Plattform für statische Codeanalysen und wird zur Prüfung der technischen Qualität von Quellcode eingesetzt."
  },
  {
    "name": "Nx",
    "ring": "High",
    "quadrant": "tools",
    "isNew": "FALSE",
    "description": "Ein NX-Monorepo ist eine weit verbreitete Architektur für moderne Webentwicklungsprojekte. Es bietet eine einfachere Wartbarkeit und Skalierbarkeit, indem es eine einheitliche Struktur und Werkzeuge für alle Projekte innerhalb des Monorepos bereitstellt."
  },
  {
    "name": "Angular",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "Angular ist die nächste Version des OpenSource Frameworks AngularJS. Die Code-Basis wurde komplett neu geschrieben und nutzt nun als Basis die Sprache TypeScript. Grundidee und Konzepte des Frameworks sind jedoch identisch geblieben was eine Migration oder sogar einen hybriden Einsatz der Versionen ermöglicht. Der Fokus des Projektes hat sich von der Entwicklung eines Frameworks auf die Entwicklung einer ganzen Plattform für WebAnwendungen erweitert. Aktuell arbeiten über 30 MitarbeiterInnen fest an dem Projekt und werden von hunderten Entwicklern aus der OpenSource-Community unterstützt. Durch die Einführung von Werkzeugen wie dem Kommandozeilenwerkzeug Angular-CLI können Projekte jetzt noch schneller erstellt und in Produktion überführt werden."
  },
  {
    "name": "C#",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "C# (Aussprache „C Sharp“) ist eine moderne, objektorientierte und typsichere Programmiersprache. C# ermöglicht Entwicklern das Erstellen zahlreicher sicherer und robuster Anwendungen, die in .NET ausgeführt werden. C# hat seine Wurzeln in der C-Sprachenfamilie und ist Programmierern, die mit C, C++, Java und JavaScript arbeiten, sofort vertraut."
  },
  {
    "name": ".NET",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "NET ist eine kostenlose, plattformübergreifende Open-Source-Entwicklerplattform für die Erstellung vieler verschiedener Arten von Anwendungen. Es kann Programme ausführen, die in mehreren Sprachen geschrieben wurden, wobei C# am beliebtesten ist. Es basiert auf einer leistungsstarken Runtime, die in der Produktion von vielen anspruchsvollen Apps verwendet wird."
  },
  {
    "name": "Python",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "Python ist eine universelle Programmiersprache, mit der sich Probleme und Aufgaben aus unterschiedlichsten Bereichen lösen lassen. Python setzt den Schwerpunkt auf Lesbarkeit und Einfachheit und verzichtet weitestgehend auf Klammern und das obligatorische Semikolon am Ende einer Zeile. Stattdessen ist penibel auf die korrekte Einrückung von Codezeilen und -blöcken zu achten."
  },
  {
    "name": "Typescript",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "TypeScript ist ein Superset von JavaScript, das JavaScript um optionale statische Typisierung und erweiterte Funktionen erweitert. Es wurde von Microsoft entwickelt und erstmals im Oktober 2012 veröffentlicht. Seit seiner Veröffentlichung im Jahr 2012 hat es sich in der Webentwicklergemeinschaft schnell durchgesetzt"
  },
  {
    "name": "Go",
    "ring": "Dev",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "Go (auch Golang genannt - kurz für Go Language) ist eine Open-Source-Programmiersprache für allgemeine Zwecke. Go wurde von Google-Ingenieuren entwickelt, um zuverlässige und effiziente Software zu erstellen. Es ähnelt stark der Programmiersprache C, ist statisch typisiert und explizit."
  },
  {
    "name": "Java",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "ava ist eine Programmiersprache und Computing-Plattform, die 1995 von Sun Microsystems veröffentlicht wurde. Sie stellt mittlerweile eine Basis für den Großteil der digitalen Welt von heute bereit und dient als zuverlässige Plattform für viele Services und Anwendungen. Auch neue, innovative und zukunftsgerichtete Produkte und digitale Services basieren nach wie vor auf Java."
  },
  {
    "name": "Spring",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "Das Spring Framework (kurz Spring) ist ein quelloffenes Framework für die Java-Plattform, welches oft für Web-Anwendungen verwendet wird. Ziel des Spring Frameworks ist es, die Entwicklung mit Java/Java EE zu vereinfachen und gute Programmierpraktiken zu fördern.[3] Das Spring Framework bietet mit einem breiten Spektrum an Funktionalität eine ganzheitliche Lösung zur Entwicklung von Anwendungen und deren Geschäftslogiken. Dabei steht die Entkopplung der Applikationskomponenten im Vordergrund."
  },
  {
    "name": "Springboot",
    "ring": "High",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "Java Spring Boot (Spring Boot) ist ein Tool, das die Entwicklung von Webanwendungen und Mikroservices mit Spring Framework durch drei Kernfunktionen schneller und einfacher macht.\n- Autokonfiguration\n- Ein „Opinionated-Konfigurationsansatz \n - Die Fähigkeit, eigenständige Anwendungen zu erstellen."
  },
  {
    "name": "Bash Scripting",
    "ring": "Dev",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "Ein BASH-Skript besteht aus einer Textdatei, in der Kommandos aufgeführt sind. Ruft man nun die Textdatei als Programm auf, werden die Kommandos darin nacheinander abgearbeitet. Alles was wir in der Shell ausführen, kann in ein Skript geschrieben werden und umgekehrt kann auch das Skript in die Shell kopiert und so ausgeführt werden. Auf diese Weise können wir in der Übung ausprobieren, ob der geschriebene Code auch funktioniert."
  },
  {
    "name": "Opentelemetry",
    "ring": "Dev",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "OpenTelemetry (OTel) ist ein Open-Source-Framework für Observability, mit dem Entwicklungsteams Telemetriedaten in einem einzigen, einheitlichen Format generieren, verarbeiten und übertragen können. Dieses Format wurde von der Cloud Native Computing Foundation (CNCF) entwickelt, um standardisierte Protokolle und Tools zum Erfassen und Weiterleiten von Metriken, Logs und Traces an Überwachungsplattformen bereitzustellen."
  },
  {
    "name": "GraalVM",
    "ring": "Dev",
    "quadrant": "languages & frameworks",
    "isNew": "FALSE",
    "description": "GraalVM ist ein leistungsstarkes JDK, das Java- und JVM-basierte Anwendungen beschleunigt und das Erstellen und Ausführen von Cloud-nativen Java-Diensten vereinfacht. Der optimierte Compiler generiert schnelleren Code und verwendet weniger Compute-Ressourcen, sodass Microservices sofort gestartet werden können."
  },
  {
    "name": "Serverless architecture",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Serverlose Architekturen sind Anwendungsdesigns, die Drittanbieter 'Backend as a Service' (BaaS)-Dienste integrieren und/oder benutzerdefinierten Code ausführen, der in verwalteten, ephemeren Containern auf einer 'Functions as a Service' (FaaS)-Plattform läuft. Durch die Verwendung dieser Konzepte sowie verwandter Ansätze wie Single-Page-Anwendungen beseitigen solche Architekturen weitgehend die Notwendigkeit für eine traditionelle, ständig aktive Serverkomponente. Serverlose Architekturen können erheblich von reduzierten Betriebskosten, Komplexität und Entwicklungszeiten profitieren, jedoch auf Kosten einer erhöhten Abhängigkeit von Anbieterabhängigkeiten und vergleichsweise unreifen unterstützenden Diensten."
  },
  {
    "name": "CI/CD",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Ziel von CI/CD, kurz für Continuous Integration und Continuous Delivery/Deployment, ist die Optimierung und Beschleunigung des Softwareentwicklungs-Lifecycle. Continuous Integration (CI) bezieht sich auf die Praktik, Codeänderungen automatisch und regelmäßig in ein gemeinsames Quellcode-Repository zu integrieren. Continuous Delivery und/oder Continuous Deployment (CD) ist ein zweiteiliger Prozess, der die Integration, das Testen und die Bereitstellung der Codeänderungen umfasst. Continuous Delivery beinhaltet kein automatisches Produktiv-Deployment, während beim Continuous Deployment Update-Releases automatisch in die Produktivumgebung übergeben werden."
  },
  {
    "name": "Microservices",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Microservices sind ein architekturbezogener und organisatorischer Ansatz in der Softwareentwicklung, bei dem Software aus kleinen unabhängigen Services besteht, die über sorgfältig definierte APIs kommunizieren. Diese Services gehören kleinen, eigenständigen Teams. Microservices-Architekturen vereinfachen die Skalierbarkeit und verringern die Entwicklungszeit von Anwendungen, ermöglichen Innovationen und verkürzen die Markteinführungszeit für neue Funktionen."
  },
  {
    "name": "Message Queues",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Eine Message Queues (Nachrichtenwarteschlange) ist eine Art der Kommunikation zwischen Services, die in Serverless-Architekturen und Architekturen mit Mikroservices verwendet wird. Die Nachrichten werden in der Warteschlange gespeichert, bis sie verarbeitet und gelöscht werden. Jede Nachricht wird von einem einzelnen Nutzer immer nur einmal verarbeitet. Mithilfe von Message Queues können umfangreiche Verarbeitungsprozesse entkoppelt, Aufgaben gepuffert oder im Stapelbetrieb verarbeitet und hohe Workloads entschärft werden."
  },
  {
    "name": "Design Systems",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Mit der zunehmenden Dynamik und Komplexität der Anwendungsentwicklung wird es zu einer Herausforderung, barrierefreie und benutzerfreundliche Produkte mit konsistentem Stil zu liefern. Dies gilt insbesondere für größere Organisationen mit mehreren Teams, die an verschiedenen Produkten arbeiten. Design-Systeme definieren eine Sammlung von Design-Mustern, Komponentenbibliotheken und bewährten Design- und Entwicklungspraktiken, die konsistente digitale Produkte gewährleisten. Entstanden aus den Corporate-Styleguides der Vergangenheit bieten Design-Systeme gemeinsame Bibliotheken und Dokumente, die leicht zu finden und zu verwenden sind. Im Allgemeinen werden Anleitungen als Code niedergeschrieben und unter Versionskontrolle gehalten, sodass der Leitfaden weniger mehrdeutig ist und einfacher zu pflegen ist als einfache Dokumente. Design-Systeme sind zu einem Standardansatz geworden, wenn Teams und Disziplinen in der Produktentwicklung zusammenarbeiten, weil sie es Teams ermöglichen, sich zu konzentrieren. Sie können strategische Herausforderungen rund um das Produkt selbst angehen, ohne jedes Mal das Rad neu zu erfinden, wenn eine neue visuelle Komponente benötigt wird."
  },
  {
    "name": "GitOps",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "GitOps ist eine Technik zur Bereitstellung von Anwendungen über das Kontrollschleifenmuster. Ein Operator hält die bereitgestellte Anwendung mit der Konfiguration synchron, normalerweise ein Git-Repository."
  },
  {
    "name": "Design system decision records",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "In einer schnelllebigen Produktentwicklungsumgebung, in der sich die Bedürfnisse der Benutzer ständig weiterentwickeln, ist Design ein Bereich, der sich ständig verändert. Dies bedeutet, dass kontinuierlich Input zu Designentscheidungen erforderlich ist. Inspiriert von der Idee, Architekturentscheidungen über ADRs zu dokumentieren, haben wir begonnen, ein ähnliches Format zu übernehmen - design system decision records -, um 'Design-System-Records' mit entsprechender Begründung, Forschungsergebnissen und Experimentenergebnissen zu dokumentieren. Die effektive Kommunikation von 'Design-System-Records' scheint ein aufkommendes Bedürfnis von Produktentwicklungsteams zu sein; dies in dieser transparenten Art und Weise zu tun, wird auch von zeroheight empfohlen. Diese Technik hat uns geholfen, die Einarbeitungszeiten zu verkürzen, Gespräche voranzutreiben und Arbeitsströme zu harmonisieren, die das gleiche Design-System teilen."
  },
  {
    "name": "Single Page Application",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Eine Single Page Application ist eine Webanwendung oder Website, deren Content nur einmal geladen und dann dynamisch „aktualisiert“ wird. Für Interaktionen mit der Seite oder mit Folgeseiten muss nicht extra der Server angesprochen werden, was bedeutet, dass die Seite nicht neu geladen wird. Die daraus entstehende User Experience ist mit der einer Desktop- oder nativen App vergleichbar."
  },
  {
    "name": "Cloud Networking",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Cloud-Networking bezieht sich auf die Gestaltung, Implementierung und Verwaltung von Netzwerkressourcen und -diensten in der Cloud. Es umfasst verschiedene Aspekte der Netzwerkkommunikation und -infrastruktur, die es Organisationen ermöglichen, ihre IT-Ressourcen in Cloud-Umgebungen effizient zu nutzen und zu verwalten."
  },
  {
    "name": "Infrastructure as Code",
    "ring": "High",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "description": "Infrastructure as Code (IaC) ist die Fähigkeit, Ihre Computerinfrastruktur mithilfe von Code anstelle manueller Prozesse und Einstellungen bereitzustellen und zu unterstützen. Jede Anwendungsumgebung erfordert viele Infrastrukturkomponenten wie Betriebssysteme, Datenbankverbindungen und Speicher. "
  }
]
